<?php
/**
 * VestigingBasis
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  KvK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Basisprofiel
 *
 * Documentatie voor API Basisprofiel.
 *
 * The version of the OpenAPI document: 1.4.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace KvK\Model;

use \ArrayAccess;
use \KvK\ObjectSerializer;

/**
 * VestigingBasis Class Doc Comment
 *
 * @category Class
 * @package  KvK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class VestigingBasis implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'VestigingBasis';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'vestigingsnummer' => 'string',
        'kvk_nummer' => 'string',
        'eerste_handelsnaam' => 'string',
        'ind_hoofdvestiging' => 'string',
        'ind_adres_afgeschermd' => 'string',
        'ind_commerciele_vestiging' => 'string',
        'volledig_adres' => 'string',
        '_links' => 'array<string,\KvK\Model\Link>'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'vestigingsnummer' => null,
        'kvk_nummer' => null,
        'eerste_handelsnaam' => null,
        'ind_hoofdvestiging' => null,
        'ind_adres_afgeschermd' => null,
        'ind_commerciele_vestiging' => null,
        'volledig_adres' => null,
        '_links' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'vestigingsnummer' => false,
        'kvk_nummer' => false,
        'eerste_handelsnaam' => false,
        'ind_hoofdvestiging' => false,
        'ind_adres_afgeschermd' => false,
        'ind_commerciele_vestiging' => false,
        'volledig_adres' => false,
        '_links' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'vestigingsnummer' => 'vestigingsnummer',
        'kvk_nummer' => 'kvkNummer',
        'eerste_handelsnaam' => 'eersteHandelsnaam',
        'ind_hoofdvestiging' => 'indHoofdvestiging',
        'ind_adres_afgeschermd' => 'indAdresAfgeschermd',
        'ind_commerciele_vestiging' => 'indCommercieleVestiging',
        'volledig_adres' => 'volledigAdres',
        '_links' => '_links'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'vestigingsnummer' => 'setVestigingsnummer',
        'kvk_nummer' => 'setKvkNummer',
        'eerste_handelsnaam' => 'setEersteHandelsnaam',
        'ind_hoofdvestiging' => 'setIndHoofdvestiging',
        'ind_adres_afgeschermd' => 'setIndAdresAfgeschermd',
        'ind_commerciele_vestiging' => 'setIndCommercieleVestiging',
        'volledig_adres' => 'setVolledigAdres',
        '_links' => 'setLinks'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'vestigingsnummer' => 'getVestigingsnummer',
        'kvk_nummer' => 'getKvkNummer',
        'eerste_handelsnaam' => 'getEersteHandelsnaam',
        'ind_hoofdvestiging' => 'getIndHoofdvestiging',
        'ind_adres_afgeschermd' => 'getIndAdresAfgeschermd',
        'ind_commerciele_vestiging' => 'getIndCommercieleVestiging',
        'volledig_adres' => 'getVolledigAdres',
        '_links' => 'getLinks'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('vestigingsnummer', $data ?? [], null);
        $this->setIfExists('kvk_nummer', $data ?? [], null);
        $this->setIfExists('eerste_handelsnaam', $data ?? [], null);
        $this->setIfExists('ind_hoofdvestiging', $data ?? [], null);
        $this->setIfExists('ind_adres_afgeschermd', $data ?? [], null);
        $this->setIfExists('ind_commerciele_vestiging', $data ?? [], null);
        $this->setIfExists('volledig_adres', $data ?? [], null);
        $this->setIfExists('_links', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets vestigingsnummer
     *
     * @return string|null
     */
    public function getVestigingsnummer()
    {
        return $this->container['vestigingsnummer'];
    }

    /**
     * Sets vestigingsnummer
     *
     * @param string|null $vestigingsnummer Vestigingsnummer: uniek nummer dat bestaat uit 12 cijfers
     *
     * @return self
     */
    public function setVestigingsnummer($vestigingsnummer)
    {
        if (is_null($vestigingsnummer)) {
            throw new \InvalidArgumentException('non-nullable vestigingsnummer cannot be null');
        }
        $this->container['vestigingsnummer'] = $vestigingsnummer;

        return $this;
    }

    /**
     * Gets kvk_nummer
     *
     * @return string|null
     */
    public function getKvkNummer()
    {
        return $this->container['kvk_nummer'];
    }

    /**
     * Sets kvk_nummer
     *
     * @param string|null $kvk_nummer Nederlands Kamer van Koophandel nummer: bestaat uit 8 cijfers
     *
     * @return self
     */
    public function setKvkNummer($kvk_nummer)
    {
        if (is_null($kvk_nummer)) {
            throw new \InvalidArgumentException('non-nullable kvk_nummer cannot be null');
        }
        $this->container['kvk_nummer'] = $kvk_nummer;

        return $this;
    }

    /**
     * Gets eerste_handelsnaam
     *
     * @return string|null
     */
    public function getEersteHandelsnaam()
    {
        return $this->container['eerste_handelsnaam'];
    }

    /**
     * Sets eerste_handelsnaam
     *
     * @param string|null $eerste_handelsnaam De naam waaronder een onderneming of vestiging handelt
     *
     * @return self
     */
    public function setEersteHandelsnaam($eerste_handelsnaam)
    {
        if (is_null($eerste_handelsnaam)) {
            throw new \InvalidArgumentException('non-nullable eerste_handelsnaam cannot be null');
        }
        $this->container['eerste_handelsnaam'] = $eerste_handelsnaam;

        return $this;
    }

    /**
     * Gets ind_hoofdvestiging
     *
     * @return string|null
     */
    public function getIndHoofdvestiging()
    {
        return $this->container['ind_hoofdvestiging'];
    }

    /**
     * Sets ind_hoofdvestiging
     *
     * @param string|null $ind_hoofdvestiging Hoofdvestiging (Ja/Nee)
     *
     * @return self
     */
    public function setIndHoofdvestiging($ind_hoofdvestiging)
    {
        if (is_null($ind_hoofdvestiging)) {
            throw new \InvalidArgumentException('non-nullable ind_hoofdvestiging cannot be null');
        }
        $this->container['ind_hoofdvestiging'] = $ind_hoofdvestiging;

        return $this;
    }

    /**
     * Gets ind_adres_afgeschermd
     *
     * @return string|null
     */
    public function getIndAdresAfgeschermd()
    {
        return $this->container['ind_adres_afgeschermd'];
    }

    /**
     * Sets ind_adres_afgeschermd
     *
     * @param string|null $ind_adres_afgeschermd Indicatie of het adres is afgeschermd
     *
     * @return self
     */
    public function setIndAdresAfgeschermd($ind_adres_afgeschermd)
    {
        if (is_null($ind_adres_afgeschermd)) {
            throw new \InvalidArgumentException('non-nullable ind_adres_afgeschermd cannot be null');
        }
        $this->container['ind_adres_afgeschermd'] = $ind_adres_afgeschermd;

        return $this;
    }

    /**
     * Gets ind_commerciele_vestiging
     *
     * @return string|null
     */
    public function getIndCommercieleVestiging()
    {
        return $this->container['ind_commerciele_vestiging'];
    }

    /**
     * Sets ind_commerciele_vestiging
     *
     * @param string|null $ind_commerciele_vestiging Commerciele vestiging  (Ja/Nee)
     *
     * @return self
     */
    public function setIndCommercieleVestiging($ind_commerciele_vestiging)
    {
        if (is_null($ind_commerciele_vestiging)) {
            throw new \InvalidArgumentException('non-nullable ind_commerciele_vestiging cannot be null');
        }
        $this->container['ind_commerciele_vestiging'] = $ind_commerciele_vestiging;

        return $this;
    }

    /**
     * Gets volledig_adres
     *
     * @return string|null
     */
    public function getVolledigAdres()
    {
        return $this->container['volledig_adres'];
    }

    /**
     * Sets volledig_adres
     *
     * @param string|null $volledig_adres volledig_adres
     *
     * @return self
     */
    public function setVolledigAdres($volledig_adres)
    {
        if (is_null($volledig_adres)) {
            throw new \InvalidArgumentException('non-nullable volledig_adres cannot be null');
        }
        $this->container['volledig_adres'] = $volledig_adres;

        return $this;
    }

    /**
     * Gets _links
     *
     * @return array<string,\KvK\Model\Link>|null
     */
    public function getLinks()
    {
        return $this->container['_links'];
    }

    /**
     * Sets _links
     *
     * @param array<string,\KvK\Model\Link>|null $_links _links
     *
     * @return self
     */
    public function setLinks($_links)
    {
        if (is_null($_links)) {
            throw new \InvalidArgumentException('non-nullable _links cannot be null');
        }
        $this->container['_links'] = $_links;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



<?php
/**
 * GetSignaalResponseTypeSignaal
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  KvK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Basisprofiel
 *
 * Documentatie voor API Basisprofiel.
 *
 * The version of the OpenAPI document: 1.4.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace KvK\Model;

use \ArrayAccess;
use \KvK\ObjectSerializer;

/**
 * GetSignaalResponseTypeSignaal Class Doc Comment
 *
 * @category Class
 * @package  KvK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class GetSignaalResponseTypeSignaal implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = 'signaal_type';

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'GetSignaalResponseType_signaal';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bericht_id' => 'string',
        'heeft_betrekking_op' => '\KvK\Model\MaatschappelijkeActiviteitType',
        'registratie_id' => 'string',
        'registratie_tijdstip' => '\DateTime',
        'signaal_type' => '\KvK\Model\SignaalType',
        'heeft_gewijzigde_gegevens' => '\KvK\Model\GewijzigdeGegevensType',
        'heeft_gewijzigde_vestiging' => '\KvK\Model\VestigingDetailsType',
        'heeft_nieuwe_gegevens' => '\KvK\Model\SignaalNieuweInschrijvingType',
        'startdatum' => 'string',
        'aanleiding' => '\KvK\Model\EnumeratieType',
        'persoon_rechtsvorm_oud' => 'string',
        'voortzetting_en_overdracht' => '\KvK\Model\VoortzettingEnOverdrachtType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bericht_id' => null,
        'heeft_betrekking_op' => null,
        'registratie_id' => null,
        'registratie_tijdstip' => 'date-time',
        'signaal_type' => null,
        'heeft_gewijzigde_gegevens' => null,
        'heeft_gewijzigde_vestiging' => null,
        'heeft_nieuwe_gegevens' => null,
        'startdatum' => 'YYYYMMDD',
        'aanleiding' => null,
        'persoon_rechtsvorm_oud' => null,
        'voortzetting_en_overdracht' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'bericht_id' => false,
        'heeft_betrekking_op' => false,
        'registratie_id' => false,
        'registratie_tijdstip' => false,
        'signaal_type' => false,
        'heeft_gewijzigde_gegevens' => false,
        'heeft_gewijzigde_vestiging' => false,
        'heeft_nieuwe_gegevens' => false,
        'startdatum' => false,
        'aanleiding' => false,
        'persoon_rechtsvorm_oud' => false,
        'voortzetting_en_overdracht' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bericht_id' => 'berichtId',
        'heeft_betrekking_op' => 'heeftBetrekkingOp',
        'registratie_id' => 'registratieId',
        'registratie_tijdstip' => 'registratieTijdstip',
        'signaal_type' => 'signaalType',
        'heeft_gewijzigde_gegevens' => 'heeftGewijzigdeGegevens',
        'heeft_gewijzigde_vestiging' => 'heeftGewijzigdeVestiging',
        'heeft_nieuwe_gegevens' => 'heeftNieuweGegevens',
        'startdatum' => 'startdatum',
        'aanleiding' => 'aanleiding',
        'persoon_rechtsvorm_oud' => 'persoonRechtsvormOud',
        'voortzetting_en_overdracht' => 'voortzettingEnOverdracht'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bericht_id' => 'setBerichtId',
        'heeft_betrekking_op' => 'setHeeftBetrekkingOp',
        'registratie_id' => 'setRegistratieId',
        'registratie_tijdstip' => 'setRegistratieTijdstip',
        'signaal_type' => 'setSignaalType',
        'heeft_gewijzigde_gegevens' => 'setHeeftGewijzigdeGegevens',
        'heeft_gewijzigde_vestiging' => 'setHeeftGewijzigdeVestiging',
        'heeft_nieuwe_gegevens' => 'setHeeftNieuweGegevens',
        'startdatum' => 'setStartdatum',
        'aanleiding' => 'setAanleiding',
        'persoon_rechtsvorm_oud' => 'setPersoonRechtsvormOud',
        'voortzetting_en_overdracht' => 'setVoortzettingEnOverdracht'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bericht_id' => 'getBerichtId',
        'heeft_betrekking_op' => 'getHeeftBetrekkingOp',
        'registratie_id' => 'getRegistratieId',
        'registratie_tijdstip' => 'getRegistratieTijdstip',
        'signaal_type' => 'getSignaalType',
        'heeft_gewijzigde_gegevens' => 'getHeeftGewijzigdeGegevens',
        'heeft_gewijzigde_vestiging' => 'getHeeftGewijzigdeVestiging',
        'heeft_nieuwe_gegevens' => 'getHeeftNieuweGegevens',
        'startdatum' => 'getStartdatum',
        'aanleiding' => 'getAanleiding',
        'persoon_rechtsvorm_oud' => 'getPersoonRechtsvormOud',
        'voortzetting_en_overdracht' => 'getVoortzettingEnOverdracht'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('bericht_id', $data ?? [], null);
        $this->setIfExists('heeft_betrekking_op', $data ?? [], null);
        $this->setIfExists('registratie_id', $data ?? [], null);
        $this->setIfExists('registratie_tijdstip', $data ?? [], null);
        $this->setIfExists('signaal_type', $data ?? [], null);
        $this->setIfExists('heeft_gewijzigde_gegevens', $data ?? [], null);
        $this->setIfExists('heeft_gewijzigde_vestiging', $data ?? [], null);
        $this->setIfExists('heeft_nieuwe_gegevens', $data ?? [], null);
        $this->setIfExists('startdatum', $data ?? [], null);
        $this->setIfExists('aanleiding', $data ?? [], null);
        $this->setIfExists('persoon_rechtsvorm_oud', $data ?? [], null);
        $this->setIfExists('voortzetting_en_overdracht', $data ?? [], null);

        // Initialize discriminator property with the model name.
        $this->container['signaal_type'] = static::$openAPIModelName;
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['bericht_id'] === null) {
            $invalidProperties[] = "'bericht_id' can't be null";
        }
        if ($this->container['heeft_betrekking_op'] === null) {
            $invalidProperties[] = "'heeft_betrekking_op' can't be null";
        }
        if ($this->container['registratie_id'] === null) {
            $invalidProperties[] = "'registratie_id' can't be null";
        }
        if ($this->container['registratie_tijdstip'] === null) {
            $invalidProperties[] = "'registratie_tijdstip' can't be null";
        }
        if ($this->container['signaal_type'] === null) {
            $invalidProperties[] = "'signaal_type' can't be null";
        }
        if ($this->container['heeft_gewijzigde_gegevens'] === null) {
            $invalidProperties[] = "'heeft_gewijzigde_gegevens' can't be null";
        }
        if ($this->container['heeft_gewijzigde_vestiging'] === null) {
            $invalidProperties[] = "'heeft_gewijzigde_vestiging' can't be null";
        }
        if ($this->container['heeft_nieuwe_gegevens'] === null) {
            $invalidProperties[] = "'heeft_nieuwe_gegevens' can't be null";
        }
        if ($this->container['startdatum'] === null) {
            $invalidProperties[] = "'startdatum' can't be null";
        }
        if ($this->container['aanleiding'] === null) {
            $invalidProperties[] = "'aanleiding' can't be null";
        }
        if ($this->container['voortzetting_en_overdracht'] === null) {
            $invalidProperties[] = "'voortzetting_en_overdracht' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bericht_id
     *
     * @return string
     */
    public function getBerichtId()
    {
        return $this->container['bericht_id'];
    }

    /**
     * Sets bericht_id
     *
     * @param string $bericht_id bericht_id
     *
     * @return self
     */
    public function setBerichtId($bericht_id)
    {
        if (is_null($bericht_id)) {
            throw new \InvalidArgumentException('non-nullable bericht_id cannot be null');
        }
        $this->container['bericht_id'] = $bericht_id;

        return $this;
    }

    /**
     * Gets heeft_betrekking_op
     *
     * @return \KvK\Model\MaatschappelijkeActiviteitType
     */
    public function getHeeftBetrekkingOp()
    {
        return $this->container['heeft_betrekking_op'];
    }

    /**
     * Sets heeft_betrekking_op
     *
     * @param \KvK\Model\MaatschappelijkeActiviteitType $heeft_betrekking_op heeft_betrekking_op
     *
     * @return self
     */
    public function setHeeftBetrekkingOp($heeft_betrekking_op)
    {
        if (is_null($heeft_betrekking_op)) {
            throw new \InvalidArgumentException('non-nullable heeft_betrekking_op cannot be null');
        }
        $this->container['heeft_betrekking_op'] = $heeft_betrekking_op;

        return $this;
    }

    /**
     * Gets registratie_id
     *
     * @return string
     */
    public function getRegistratieId()
    {
        return $this->container['registratie_id'];
    }

    /**
     * Sets registratie_id
     *
     * @param string $registratie_id registratie_id
     *
     * @return self
     */
    public function setRegistratieId($registratie_id)
    {
        if (is_null($registratie_id)) {
            throw new \InvalidArgumentException('non-nullable registratie_id cannot be null');
        }
        $this->container['registratie_id'] = $registratie_id;

        return $this;
    }

    /**
     * Gets registratie_tijdstip
     *
     * @return \DateTime
     */
    public function getRegistratieTijdstip()
    {
        return $this->container['registratie_tijdstip'];
    }

    /**
     * Sets registratie_tijdstip
     *
     * @param \DateTime $registratie_tijdstip registratie_tijdstip
     *
     * @return self
     */
    public function setRegistratieTijdstip($registratie_tijdstip)
    {
        if (is_null($registratie_tijdstip)) {
            throw new \InvalidArgumentException('non-nullable registratie_tijdstip cannot be null');
        }
        $this->container['registratie_tijdstip'] = $registratie_tijdstip;

        return $this;
    }

    /**
     * Gets signaal_type
     *
     * @return \KvK\Model\SignaalType
     */
    public function getSignaalType()
    {
        return $this->container['signaal_type'];
    }

    /**
     * Sets signaal_type
     *
     * @param \KvK\Model\SignaalType $signaal_type signaal_type
     *
     * @return self
     */
    public function setSignaalType($signaal_type)
    {
        if (is_null($signaal_type)) {
            throw new \InvalidArgumentException('non-nullable signaal_type cannot be null');
        }
        $this->container['signaal_type'] = $signaal_type;

        return $this;
    }

    /**
     * Gets heeft_gewijzigde_gegevens
     *
     * @return \KvK\Model\GewijzigdeGegevensType
     */
    public function getHeeftGewijzigdeGegevens()
    {
        return $this->container['heeft_gewijzigde_gegevens'];
    }

    /**
     * Sets heeft_gewijzigde_gegevens
     *
     * @param \KvK\Model\GewijzigdeGegevensType $heeft_gewijzigde_gegevens heeft_gewijzigde_gegevens
     *
     * @return self
     */
    public function setHeeftGewijzigdeGegevens($heeft_gewijzigde_gegevens)
    {
        if (is_null($heeft_gewijzigde_gegevens)) {
            throw new \InvalidArgumentException('non-nullable heeft_gewijzigde_gegevens cannot be null');
        }
        $this->container['heeft_gewijzigde_gegevens'] = $heeft_gewijzigde_gegevens;

        return $this;
    }

    /**
     * Gets heeft_gewijzigde_vestiging
     *
     * @return \KvK\Model\VestigingDetailsType
     */
    public function getHeeftGewijzigdeVestiging()
    {
        return $this->container['heeft_gewijzigde_vestiging'];
    }

    /**
     * Sets heeft_gewijzigde_vestiging
     *
     * @param \KvK\Model\VestigingDetailsType $heeft_gewijzigde_vestiging heeft_gewijzigde_vestiging
     *
     * @return self
     */
    public function setHeeftGewijzigdeVestiging($heeft_gewijzigde_vestiging)
    {
        if (is_null($heeft_gewijzigde_vestiging)) {
            throw new \InvalidArgumentException('non-nullable heeft_gewijzigde_vestiging cannot be null');
        }
        $this->container['heeft_gewijzigde_vestiging'] = $heeft_gewijzigde_vestiging;

        return $this;
    }

    /**
     * Gets heeft_nieuwe_gegevens
     *
     * @return \KvK\Model\SignaalNieuweInschrijvingType
     */
    public function getHeeftNieuweGegevens()
    {
        return $this->container['heeft_nieuwe_gegevens'];
    }

    /**
     * Sets heeft_nieuwe_gegevens
     *
     * @param \KvK\Model\SignaalNieuweInschrijvingType $heeft_nieuwe_gegevens heeft_nieuwe_gegevens
     *
     * @return self
     */
    public function setHeeftNieuweGegevens($heeft_nieuwe_gegevens)
    {
        if (is_null($heeft_nieuwe_gegevens)) {
            throw new \InvalidArgumentException('non-nullable heeft_nieuwe_gegevens cannot be null');
        }
        $this->container['heeft_nieuwe_gegevens'] = $heeft_nieuwe_gegevens;

        return $this;
    }

    /**
     * Gets startdatum
     *
     * @return string
     */
    public function getStartdatum()
    {
        return $this->container['startdatum'];
    }

    /**
     * Sets startdatum
     *
     * @param string $startdatum startdatum
     *
     * @return self
     */
    public function setStartdatum($startdatum)
    {
        if (is_null($startdatum)) {
            throw new \InvalidArgumentException('non-nullable startdatum cannot be null');
        }
        $this->container['startdatum'] = $startdatum;

        return $this;
    }

    /**
     * Gets aanleiding
     *
     * @return \KvK\Model\EnumeratieType
     */
    public function getAanleiding()
    {
        return $this->container['aanleiding'];
    }

    /**
     * Sets aanleiding
     *
     * @param \KvK\Model\EnumeratieType $aanleiding aanleiding
     *
     * @return self
     */
    public function setAanleiding($aanleiding)
    {
        if (is_null($aanleiding)) {
            throw new \InvalidArgumentException('non-nullable aanleiding cannot be null');
        }
        $this->container['aanleiding'] = $aanleiding;

        return $this;
    }

    /**
     * Gets persoon_rechtsvorm_oud
     *
     * @return string|null
     */
    public function getPersoonRechtsvormOud()
    {
        return $this->container['persoon_rechtsvorm_oud'];
    }

    /**
     * Sets persoon_rechtsvorm_oud
     *
     * @param string|null $persoon_rechtsvorm_oud persoon_rechtsvorm_oud
     *
     * @return self
     */
    public function setPersoonRechtsvormOud($persoon_rechtsvorm_oud)
    {
        if (is_null($persoon_rechtsvorm_oud)) {
            throw new \InvalidArgumentException('non-nullable persoon_rechtsvorm_oud cannot be null');
        }
        $this->container['persoon_rechtsvorm_oud'] = $persoon_rechtsvorm_oud;

        return $this;
    }

    /**
     * Gets voortzetting_en_overdracht
     *
     * @return \KvK\Model\VoortzettingEnOverdrachtType
     */
    public function getVoortzettingEnOverdracht()
    {
        return $this->container['voortzetting_en_overdracht'];
    }

    /**
     * Sets voortzetting_en_overdracht
     *
     * @param \KvK\Model\VoortzettingEnOverdrachtType $voortzetting_en_overdracht voortzetting_en_overdracht
     *
     * @return self
     */
    public function setVoortzettingEnOverdracht($voortzetting_en_overdracht)
    {
        if (is_null($voortzetting_en_overdracht)) {
            throw new \InvalidArgumentException('non-nullable voortzetting_en_overdracht cannot be null');
        }
        $this->container['voortzetting_en_overdracht'] = $voortzetting_en_overdracht;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


